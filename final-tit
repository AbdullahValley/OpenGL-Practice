#include <GL/freeglut.h>
#include <GL/gl.h>
#include <stdlib.h>


GLfloat spin = 0.0;
GLfloat spin1 = 0.0;
GLfloat flag = 0.0;
void t1()
{
    glPushMatrix();
   glRotatef(-spin1,0.0,0.0,1.0);
   glColor3f(1,1,0);
   glBegin(GL_POLYGON);
   glVertex3f(.5,0,0);
   glVertex3f(0,.5,0);
   glVertex3f(-.5,0,0);
   glVertex3f(0,-.5,0);
   glEnd();
	glPopMatrix();

}
void t2()
{

     glPushMatrix();
    	glColor3f(0, 0, 1);
glRotatef(-spin1, 0.0, 0.0, 1.0);
glBegin(GL_POLYGON);
glColor3f(0, 0, 1);
      glVertex3f (1, 0, 0);
      glColor3f(1, 0, 0);
      glVertex3f (0, 1, 0);
      glColor3f(1, 0, 0);
      glVertex3f (-1, 0, 0);
      glColor3f(1, 1, 1);
      glVertex3f (0, -1, 0);
	glEnd();
    glPopMatrix();


}
void t3()
{


   glPushMatrix();
    	glColor3f(1, 0, 0);
glRotatef(-spin1, 0.0, 0.0, 1.0);
glBegin(GL_POLYGON);
glColor3f(0, 0, 1);
      glVertex3f (1, 0, 0);
      glColor3f(0, 1, 0);
      glVertex3f (0, 1, 0);
      glColor3f(0, 0, 1);
      glVertex3f (-1, 0, 0);
      glColor3f(0, 1, 0);
      glVertex3f (0, -1, 0);
	glEnd();
	glPopMatrix();
}
void t4()
{
    glPushMatrix();
    t1();

    glTranslatef(1.5,0,0);
    t3();


    glTranslatef(-3,0,0);
    t3();

    glTranslatef(1.5,1.5,0);
    t3();


    glTranslatef(0,-3,0);
    t3();
    glPopMatrix();


}
void t5()
{
    glPushMatrix();
    t2();
    glTranslatef(3.4,0,0);
    t4();
    glTranslatef(-6.9,0,0);
    t4();
    glTranslatef(3.5,3.5,0);
    t4();
    glTranslatef(0,-7,0);
    t4();
    glPopMatrix();

}



void display(void){

	glClear(GL_COLOR_BUFFER_BIT);


	//t1();
	//t2();
	//t3();
	t5();
	//t4();

	glutSwapBuffers();
}

void spinDisplay(void)
{
	spin = spin + 0.2;
	spin1 = spin1 + 1;
	if (spin > 360.0)spin = spin - 360.0;
	if (spin1 > 360.0)spin1 = spin1 - 360.0;

	glutPostRedisplay();
}



void init(void)
{

	glClearColor(0.0f, 0.0f, 0.0f, 0.5f);				// Black Background
	glOrtho(-10,10,-10,10,10,-10);
}


void reshape (int w, int h)
{
    glViewport (0, 0, (GLsizei) w, (GLsizei) h);
}

static void key(unsigned char key, int x, int y)
{
    switch (key)
    {
        case 27 :
        case 'g':
            glutIdleFunc(spinDisplay);
            break;

             case 'l':{
           glTranslatef(2,0,0);
           t5();
             }
            break;
             case 'j':{
           glTranslatef(-2,0,0);
           t5();
             }
            break;
            case 'i':{
            glTranslatef(0,2,0);
            t5();}
            break;
             case 'k':{
            glTranslatef(0,-2,0);
            t5();
            }
            break;

                case 'o':{

                    void glutIdleFunc(void t1() );
                    //glRotatef(spin,0,0,1);
                    //t1();



                }
                break;






    }

    glutPostRedisplay();
}






int main(int argc, char *argv[])
{
    glutInit(&argc, argv);
   //printf("\n\t\tPress mouse left button to rotate and right button to stop.\n");

   glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB);

   glutInitWindowSize (500, 500);

   glutInitWindowPosition (100, 100);

   glutCreateWindow ("MIST");

   init ();

   glutDisplayFunc(display);
   glutReshapeFunc(reshape);
//   glutMouseFunc(mouse);
    //glutIdleFunc(spinDisplay);
     glutKeyboardFunc(key);

   glutMainLoop();

   return 0;
}




